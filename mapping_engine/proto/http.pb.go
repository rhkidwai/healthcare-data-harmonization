// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.19.4
// source: proto/http.proto

package proto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ServerDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Config that provides the information for authenticating with the server.
	//
	// Types that are assignable to AuthenticationConfig:
	//	*ServerDefinition_CustomGcp
	AuthenticationConfig isServerDefinition_AuthenticationConfig `protobuf_oneof:"authentication_config"`
}

func (x *ServerDefinition) Reset() {
	*x = ServerDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_http_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerDefinition) ProtoMessage() {}

func (x *ServerDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_proto_http_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerDefinition.ProtoReflect.Descriptor instead.
func (*ServerDefinition) Descriptor() ([]byte, []int) {
	return file_proto_http_proto_rawDescGZIP(), []int{0}
}

func (x *ServerDefinition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (m *ServerDefinition) GetAuthenticationConfig() isServerDefinition_AuthenticationConfig {
	if m != nil {
		return m.AuthenticationConfig
	}
	return nil
}

func (x *ServerDefinition) GetCustomGcp() *CustomGCPConfig {
	if x, ok := x.GetAuthenticationConfig().(*ServerDefinition_CustomGcp); ok {
		return x.CustomGcp
	}
	return nil
}

type isServerDefinition_AuthenticationConfig interface {
	isServerDefinition_AuthenticationConfig()
}

type ServerDefinition_CustomGcp struct {
	CustomGcp *CustomGCPConfig `protobuf:"bytes,2,opt,name=custom_gcp,json=customGcp,proto3,oneof"` // TODO (): Support additional server types.
}

func (*ServerDefinition_CustomGcp) isServerDefinition_AuthenticationConfig() {}

// TODO(): Remove since its not needed anymore.
type CustomGCPConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Location of client secret JSON
	ClientSecretFile *Location `protobuf:"bytes,1,opt,name=client_secret_file,json=clientSecretFile,proto3" json:"client_secret_file,omitempty"`
	// Scopes
	Scopes []string `protobuf:"bytes,2,rep,name=scopes,proto3" json:"scopes,omitempty"`
}

func (x *CustomGCPConfig) Reset() {
	*x = CustomGCPConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_http_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomGCPConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomGCPConfig) ProtoMessage() {}

func (x *CustomGCPConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_http_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomGCPConfig.ProtoReflect.Descriptor instead.
func (*CustomGCPConfig) Descriptor() ([]byte, []int) {
	return file_proto_http_proto_rawDescGZIP(), []int{1}
}

func (x *CustomGCPConfig) GetClientSecretFile() *Location {
	if x != nil {
		return x.ClientSecretFile
	}
	return nil
}

func (x *CustomGCPConfig) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

type Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are assignable to Location:
	//	*Location_GcsLocation
	//	*Location_LocalPath
	//	*Location_UrlPath
	Location isLocation_Location `protobuf_oneof:"location"`
}

func (x *Location) Reset() {
	*x = Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_http_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_proto_http_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_proto_http_proto_rawDescGZIP(), []int{2}
}

func (x *Location) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (m *Location) GetLocation() isLocation_Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (x *Location) GetGcsLocation() string {
	if x, ok := x.GetLocation().(*Location_GcsLocation); ok {
		return x.GcsLocation
	}
	return ""
}

func (x *Location) GetLocalPath() string {
	if x, ok := x.GetLocation().(*Location_LocalPath); ok {
		return x.LocalPath
	}
	return ""
}

func (x *Location) GetUrlPath() string {
	if x, ok := x.GetLocation().(*Location_UrlPath); ok {
		return x.UrlPath
	}
	return ""
}

type isLocation_Location interface {
	isLocation_Location()
}

type Location_GcsLocation struct {
	// Location in Cloud Storage.
	GcsLocation string `protobuf:"bytes,2,opt,name=gcs_location,json=gcsLocation,proto3,oneof"`
}

type Location_LocalPath struct {
	// Local path.
	LocalPath string `protobuf:"bytes,3,opt,name=local_path,json=localPath,proto3,oneof"`
}

type Location_UrlPath struct {
	// URL path.
	UrlPath string `protobuf:"bytes,4,opt,name=url_path,json=urlPath,proto3,oneof"`
}

func (*Location_GcsLocation) isLocation_Location() {}

func (*Location_LocalPath) isLocation_Location() {}

func (*Location_UrlPath) isLocation_Location() {}

// This defines a projector that will obtain its return value from an HTTP
// endpoint.
type HttpFetchQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the fetch query, to be referenced in a projector field.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Should evaluate to an HTTP Method. Parameters passed along from caller.
	RequestMethod *ValueSource `protobuf:"bytes,2,opt,name=request_method,json=requestMethod,proto3" json:"request_method,omitempty"`
	// Should evaluate to a REST URL. Parameters passed along from caller.
	RequestUrl *ValueSource `protobuf:"bytes,3,opt,name=request_url,json=requestUrl,proto3" json:"request_url,omitempty"`
	// Specifies which server type we will be making requests to.  The server type
	// should be defined in Servers.
	// If left blank, the pipeline will attempt to use its application default
	// credentials to authenticate.
	Server string `protobuf:"bytes,4,opt,name=server,proto3" json:"server,omitempty"`
}

func (x *HttpFetchQuery) Reset() {
	*x = HttpFetchQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_http_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpFetchQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpFetchQuery) ProtoMessage() {}

func (x *HttpFetchQuery) ProtoReflect() protoreflect.Message {
	mi := &file_proto_http_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpFetchQuery.ProtoReflect.Descriptor instead.
func (*HttpFetchQuery) Descriptor() ([]byte, []int) {
	return file_proto_http_proto_rawDescGZIP(), []int{3}
}

func (x *HttpFetchQuery) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HttpFetchQuery) GetRequestMethod() *ValueSource {
	if x != nil {
		return x.RequestMethod
	}
	return nil
}

func (x *HttpFetchQuery) GetRequestUrl() *ValueSource {
	if x != nil {
		return x.RequestUrl
	}
	return nil
}

func (x *HttpFetchQuery) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

// The CloudFunction message defines a cloud function that can be called as a
// projector.
type CloudFunction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TODO(): Evaluate the @ convention.
	// The name of the cloud function, and it should start with '@' to indicate
	// it is a cloud function as a projector.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The request url to call the cloud function.
	RequestUrl string `protobuf:"bytes,2,opt,name=request_url,json=requestUrl,proto3" json:"request_url,omitempty"`
}

func (x *CloudFunction) Reset() {
	*x = CloudFunction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_http_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloudFunction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudFunction) ProtoMessage() {}

func (x *CloudFunction) ProtoReflect() protoreflect.Message {
	mi := &file_proto_http_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudFunction.ProtoReflect.Descriptor instead.
func (*CloudFunction) Descriptor() ([]byte, []int) {
	return file_proto_http_proto_rawDescGZIP(), []int{4}
}

func (x *CloudFunction) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CloudFunction) GetRequestUrl() string {
	if x != nil {
		return x.RequestUrl
	}
	return ""
}

var File_proto_http_proto protoreflect.FileDescriptor

var file_proto_http_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x26, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x63, 0x61, 0x72, 0x65, 0x2e, 0x63, 0x64, 0x77, 0x2e, 0x65, 0x74, 0x6c, 0x2e, 0x6d, 0x61, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x99, 0x01, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x58, 0x0a, 0x0a, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x5f, 0x67, 0x63, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x63, 0x61, 0x72, 0x65, 0x2e,
	0x63, 0x64, 0x77, 0x2e, 0x65, 0x74, 0x6c, 0x2e, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x47, 0x43, 0x50, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x09, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x47,
	0x63, 0x70, 0x42, 0x17, 0x0a, 0x15, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x89, 0x01, 0x0a, 0x0f,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x47, 0x43, 0x50, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x5e, 0x0a, 0x12, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x63, 0x61, 0x72, 0x65, 0x2e, 0x63,
	0x64, 0x77, 0x2e, 0x65, 0x74, 0x6c, 0x2e, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x22, 0x8d, 0x01, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x67, 0x63, 0x73, 0x5f,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x0b, 0x67, 0x63, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a,
	0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1b,
	0x0a, 0x08, 0x75, 0x72, 0x6c, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x07, 0x75, 0x72, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x42, 0x0a, 0x0a, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xee, 0x01, 0x0a, 0x0e, 0x48, 0x74, 0x74, 0x70,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x5a,
	0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x63, 0x61, 0x72, 0x65, 0x2e, 0x63, 0x64, 0x77, 0x2e, 0x65, 0x74,
	0x6c, 0x2e, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0d, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x54, 0x0a, 0x0b, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x33, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x63, 0x61,
	0x72, 0x65, 0x2e, 0x63, 0x64, 0x77, 0x2e, 0x65, 0x74, 0x6c, 0x2e, 0x6d, 0x61, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x72, 0x6c,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0x44, 0x0a, 0x0d, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x72, 0x6c, 0x42, 0x7c,
	0x0a, 0x25, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x63, 0x61, 0x72, 0x65, 0x2e, 0x65, 0x74,
	0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x51, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x63, 0x61, 0x72, 0x65, 0x2d, 0x64, 0x61, 0x74, 0x61, 0x2d, 0x68, 0x61, 0x72, 0x6d, 0x6f, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_http_proto_rawDescOnce sync.Once
	file_proto_http_proto_rawDescData = file_proto_http_proto_rawDesc
)

func file_proto_http_proto_rawDescGZIP() []byte {
	file_proto_http_proto_rawDescOnce.Do(func() {
		file_proto_http_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_http_proto_rawDescData)
	})
	return file_proto_http_proto_rawDescData
}

var file_proto_http_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_http_proto_goTypes = []interface{}{
	(*ServerDefinition)(nil), // 0: cloud.healthcare.cdw.etl.mapping.proto.ServerDefinition
	(*CustomGCPConfig)(nil),  // 1: cloud.healthcare.cdw.etl.mapping.proto.CustomGCPConfig
	(*Location)(nil),         // 2: cloud.healthcare.cdw.etl.mapping.proto.Location
	(*HttpFetchQuery)(nil),   // 3: cloud.healthcare.cdw.etl.mapping.proto.HttpFetchQuery
	(*CloudFunction)(nil),    // 4: cloud.healthcare.cdw.etl.mapping.proto.CloudFunction
	(*ValueSource)(nil),      // 5: cloud.healthcare.cdw.etl.mapping.proto.ValueSource
}
var file_proto_http_proto_depIdxs = []int32{
	1, // 0: cloud.healthcare.cdw.etl.mapping.proto.ServerDefinition.custom_gcp:type_name -> cloud.healthcare.cdw.etl.mapping.proto.CustomGCPConfig
	2, // 1: cloud.healthcare.cdw.etl.mapping.proto.CustomGCPConfig.client_secret_file:type_name -> cloud.healthcare.cdw.etl.mapping.proto.Location
	5, // 2: cloud.healthcare.cdw.etl.mapping.proto.HttpFetchQuery.request_method:type_name -> cloud.healthcare.cdw.etl.mapping.proto.ValueSource
	5, // 3: cloud.healthcare.cdw.etl.mapping.proto.HttpFetchQuery.request_url:type_name -> cloud.healthcare.cdw.etl.mapping.proto.ValueSource
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_http_proto_init() }
func file_proto_http_proto_init() {
	if File_proto_http_proto != nil {
		return
	}
	file_proto_mapping_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_http_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_http_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomGCPConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_http_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_http_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HttpFetchQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_http_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloudFunction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_http_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ServerDefinition_CustomGcp)(nil),
	}
	file_proto_http_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Location_GcsLocation)(nil),
		(*Location_LocalPath)(nil),
		(*Location_UrlPath)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_http_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_http_proto_goTypes,
		DependencyIndexes: file_proto_http_proto_depIdxs,
		MessageInfos:      file_proto_http_proto_msgTypes,
	}.Build()
	File_proto_http_proto = out.File
	file_proto_http_proto_rawDesc = nil
	file_proto_http_proto_goTypes = nil
	file_proto_http_proto_depIdxs = nil
}
